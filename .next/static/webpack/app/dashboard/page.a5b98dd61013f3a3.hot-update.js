"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./utils/navigation.ts":
/*!*****************************!*\
  !*** ./utils/navigation.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useNavigateOrScrollTop: function() { return /* binding */ useNavigateOrScrollTop; }\n/* harmony export */ });\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nvar scrollableElement = null;\nfunction useNavigateOrScrollTop(targetPath) {\n    var router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_0__.useRouter)();\n    var handleNavigation = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(function() {\n        if (window.location.pathname === targetPath) {\n            if (scrollableElement) {\n                scrollableElement.scrollTo({\n                    top: 0,\n                    behavior: \"smooth\"\n                });\n            }\n        } else {\n            router.push(targetPath);\n        }\n    }, [\n        router,\n        targetPath\n    ]);\n    return handleNavigation;\n}\nuseNavigateOrScrollTop.setScrollableElement = function(element) {\n    scrollableElement = element;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL25hdmlnYXRpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QztBQUNSO0FBRXBDLElBQUlFLG9CQUFtQztBQUVoQyxTQUFTQyx1QkFBdUJDLFVBQWtCO0lBQ3ZELElBQU1DLFNBQVNMLDBEQUFTQTtJQUV4QixJQUFNTSxtQkFBbUJMLGtEQUFXQSxDQUFDO1FBQ25DLElBQUlNLE9BQU9DLFFBQVEsQ0FBQ0MsUUFBUSxLQUFLTCxZQUFZO1lBQzNDLElBQUlGLG1CQUFtQjtnQkFDckJBLGtCQUFrQlEsUUFBUSxDQUFDO29CQUFFQyxLQUFLO29CQUFHQyxVQUFVO2dCQUFTO1lBQzFEO1FBQ0YsT0FBTztZQUNMUCxPQUFPUSxJQUFJLENBQUNUO1FBQ2Q7SUFDRixHQUFHO1FBQUNDO1FBQVFEO0tBQVc7SUFFdkIsT0FBT0U7QUFDVDtBQUVBSCx1QkFBdUJXLG9CQUFvQixHQUFHLFNBQUNDO0lBQzdDYixvQkFBb0JhO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL25hdmlnYXRpb24udHM/YmFiNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tICduZXh0L25hdmlnYXRpb24nO1xyXG5pbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcclxuXHJcbmxldCBzY3JvbGxhYmxlRWxlbWVudDogV2luZG93IHwgbnVsbCA9IG51bGw7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdXNlTmF2aWdhdGVPclNjcm9sbFRvcCh0YXJnZXRQYXRoOiBzdHJpbmcpIHtcclxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcclxuXHJcbiAgY29uc3QgaGFuZGxlTmF2aWdhdGlvbiA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgIGlmICh3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUgPT09IHRhcmdldFBhdGgpIHtcclxuICAgICAgaWYgKHNjcm9sbGFibGVFbGVtZW50KSB7XHJcbiAgICAgICAgc2Nyb2xsYWJsZUVsZW1lbnQuc2Nyb2xsVG8oeyB0b3A6IDAsIGJlaGF2aW9yOiAnc21vb3RoJyB9KTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcm91dGVyLnB1c2godGFyZ2V0UGF0aCk7XHJcbiAgICB9XHJcbiAgfSwgW3JvdXRlciwgdGFyZ2V0UGF0aF0pO1xyXG5cclxuICByZXR1cm4gaGFuZGxlTmF2aWdhdGlvbjtcclxufVxyXG5cclxudXNlTmF2aWdhdGVPclNjcm9sbFRvcC5zZXRTY3JvbGxhYmxlRWxlbWVudCA9IChlbGVtZW50OiBXaW5kb3cpID0+IHtcclxuICBzY3JvbGxhYmxlRWxlbWVudCA9IGVsZW1lbnQ7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJ1c2VSb3V0ZXIiLCJ1c2VDYWxsYmFjayIsInNjcm9sbGFibGVFbGVtZW50IiwidXNlTmF2aWdhdGVPclNjcm9sbFRvcCIsInRhcmdldFBhdGgiLCJyb3V0ZXIiLCJoYW5kbGVOYXZpZ2F0aW9uIiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsInNjcm9sbFRvIiwidG9wIiwiYmVoYXZpb3IiLCJwdXNoIiwic2V0U2Nyb2xsYWJsZUVsZW1lbnQiLCJlbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/navigation.ts\n"));

/***/ })

});